[tool.poetry]
name = "legal-rag-hy"
version = "0.1.0"
description = "A jurisdiction-aware Retrieval-Augmented Generation system for legal research built with Hy and org-mode literate programming"
authors = [
    "Kushagra Kumar <kkumar@defrecord.com>",
    "Jason Walsh <jwalsh@defrecord.com>",
    "Xianglong Tao <xtao@defrecord.com>",
    "Aidan Pace <apace@defrecord.com>",
    "Sean Jensen-Grey <sjg@defrecord.com>"
]
license = "MIT"
readme = "README.org"
repository = "https://github.com/defrecord/legal-rag-hy"
keywords = ["rag", "legal", "hy", "lisp", "nlp", "org-mode", "literate-programming", "jurisdiction-aware", "citation-analysis", "embeddings", "faiss"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Legal Industry",
    "Programming Language :: Lisp",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic"
]

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
hy = "0.27.0"
openai = "^1.3.0"
faiss-cpu = "^1.7.4"
numpy = "^1.26.0"
scikit-learn = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.1"
isort = "^5.12.0"
mypy = "^1.5.1"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^1.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
legalrag-demo = "legal_rag.demo:demo"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"